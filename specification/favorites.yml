openapi: 3.0.3
info:
  version: 1.0.0
  title: mira Favorite API
  description: Favorite API for Project-Mira
paths:
  /favorite:
    get:
      description: list favorites for user
      operationId: listFavorites
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: orderBy
          in: query
          required: false
          schema:
            type: string
        - name: sort
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully returns a list of favorite object of a user
          content:
            application/json:
              schema:
                title: listFavoritesResponse
                type: object
                required:
                  - data
                  - total
                  - status
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Favorite'
                    description: a list of Favorite
                  total:
                    type: integer
                    description: total number of the result
    post:
      description: create a favorite for user and item
      operationId: createFavorite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Favorite'
      responses:
        '200':
          description: Successfully created a favorite record for itemId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorite'
  /favorite/{id}:
    delete:
      description: Delete a favorite
      operationId: deleteFavorite
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
    patch:
      description: change status of a favorite
      operationId: patchFavorite
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: patchFavoriteBody
              type: object
              required:
                - status
              properties:
                status:
                  $ref: '#/components/schemas/FavoriteStatus'
                reviewComment:
                  type: string
                rating:
                  type: integer
      responses:
        '200':
          $ref: '#/components/responses/200'
  /favorite/main/{id}:
    get:
      description: get favorite by MainItem id
      operationId: getFavoriteByMainItemId
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully get a favorite
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Favorite'
        '404':
          description: Not found
  /favorite/sub:
    get:
      description: list SubItemFavorite
      operationId: listSubItemFavorites
      parameters:
        - name: itemId
          in: query
          required: false
          schema:
            type: string
          description: itemId of the SubItem, if provided then other parameters are ignored
        - name: offset
          in: query
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: orderBy
          in: query
          required: false
          schema:
            type: string
        - name: sort
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully return a list of SubItemFavorite
          content:
            application/json:
              schema:
                title: listSubItemFavoriteResponse
                type: object
                required:
                  - data
                  - status
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SubItemFavorite'
                  total:
                    type: integer
                    description: total number of the result, if itemId is provided, this field will not available
    post:
      description: create a SubItemFavorite
      operationId: createSubItemFavorite
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: createSubItemFavoriteRequestBody
              type: object
              required:
                - subItemId
              properties:
                subItemId:
                  type: string
      responses:
        '200':
          description: Successfully created a SubItemFavorite
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubItemFavorite'
  /favorite/sub/{id}:
    post:
      description: Delete a SubItemFavorite
      operationId: deleteSubItemFavorite
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/200'
components:
  schemas:
    FavoriteStatus:
      type: string
      enum:
        - Planned
        - Watched
        - Watching
        - OnHold
        - Dropped
      x-enum-varnames:
        - Planned
        - Watched
        - Watching
        - OnHold
        - Dropped
    Favorite:
      type: object
      required:
        - status
        - item
        - userId
      properties:
        id:
          readOnly: true
          type: string
        status:
          $ref: '#/components/schemas/FavoriteStatus'
        reviewComment:
          type: string
        rating:
          type: integer
        item:
          $ref: '#/components/schemas/MainItem' # not an error, the merger doesn't support local file $ref
        userId:
          type: string
    SubItemFavorite:
      type: object
      required:
        - id
        - subItem
        - userId
      properties:
        id:
          type: string
        subItem:
          $ref: '#/components/schemas/SubItem'  # not an error, the merger doesn't support local file $ref
        userId:
          type: string
    ErrorResponse:
      title: ErrorResponse
      type: object
      properties:
        message:
          type: string
        status:
          type: integer
  responses:
    "400":
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    "404":
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    "200":
      description: Operation Complete Successfully
      content:
        application/json:
          schema:
            title: SucceedEmptyResponse
            type: object
            required:
              - message
            properties:
              message:
                type: string